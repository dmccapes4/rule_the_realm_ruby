# This class contains the cards that are generated by tiles and bought
# by players.

class Card
  attr_reader :type, :cost
  attr_accessor :attack, :defense, :range, :level, :owner,
                :battle_moves, :world_moved, :x, :y, :attacked

  def initialize(type, owner = nil)
    @type = type
    @level = 1
    card = CARDS[type]
    @attack = card[:attack]
    @defense = card[:defense]
    @range = card[:range]
    @cost = card[:cost]
    @owner = owner
    @battle_moves = 2
    @world_moved = false
  end

  def level_up
    @level += 1
    @attack += 1
    @defense += 1
  end

  def display_battle
    self.type.to_s.slice(0, 3)
  end

  def display_world
    puts "#{@owner} | #{@type}: attack = #{@attack} defense = #{@defense} "\
    "range = #{@range}"
  end
end
# This hash contains the the cards and returns a hash containing the
# attributes of the card

CARDS = {
  #player units
  swordsman: {
    attack: 1,
    defense: 2,
    range: 1,
    cost: 1
  },
  archer: {
    attack: 1,
    defense: 0,
    range: 3,
    cost: 1
  },
  spearman: {
    attack: 1,
    defense: 1,
    range: 2,
    cost: 1
  },
  ranger: {
    attack: 2,
    defense: 1,
    range: 4,
    cost: 2
  },
  knight: {
    attack: 3,
    defense: 2,
    range: 1,
    cost: 2
  },

  #other races
  elf: {
    attack: 2,
    defense: 1,
    range: 3,
    cost: 2
  },
  dwarf: {
    attack: 2,
    defense: 3,
    range: 1,
    cost: 2
  },
  orc: {
    attack: 2,
    defense: 2,
    range: 2,
    cost: 2
  },

  #barbarians:
  bax: {
    attack: 2,
    defense: 2,
    range: 1,
    cost: 0
  },
  bar: {
    attack: 2,
    defense: 1,
    range: 3,
    cost: 0
  }
}
